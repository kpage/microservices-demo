version: '2.1'

services:
  rest-api:
    links:
      - "db:db"
    image: pagekb/golang-gin
    volumes:
      - ./rest-api:/go/src/microservices-demo/rest-api:ro
    ports:
      - 3000
    command: gin -t /go/src/microservices-demo/rest-api
    environment:
      - DB_USERNAME=restbucks
      - DB_PASSWORD=restbucks
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=restbucks
      - REST_API_HTML_DOCS_ROOT=/go/src/microservices-demo/rest-api/static
      - LOGXI=*
  rest-api-proxy:
    build: ./rest-api-proxy
    volumes: 
      - ./rest-api-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./rest-api-proxy/static:/static:ro
    ports:
      - 3000:3000
    depends_on:
      - rest-api
  rest-api-integration-tester:
    build: ./rest-api-integration-tester
    volumes:
      - ./rest-api:/go/src/microservices-demo/rest-api:ro
    links:
      - rest-api
  db:
    image: mariadb:10.3.7
    environment:
      - MYSQL_ROOT_PASSWORD=rewt
      - MYSQL_DATABASE=restbucks
      - MYSQL_USER=restbucks
      - MYSQL_PASSWORD=restbucks
      - LANG=C.UTF-8
    command: mysqld --lower_case_table_names=1
    ports:
# Linked containers will use standard db port, but exposing as 3336 on host to avoid conflicting with
# other existing DB that may be installed
      - 3336:3306
  db-migrations:
    image: pagekb/docker-flyway
    command: ./wait-for-it.sh db:3306 -s -- flyway -url=jdbc:mysql://db -schemas=restbucks -user=root -password=rewt migrate
    volumes:
      - ./db/migrations:/flyway/sql:ro
    depends_on:
      - db
  web-client:
    build: ./web-client
    user: node
    volumes:
      - ./web-client:/home/node/app
      - /home/node/app/node_modules
  auth:
    links:
      - "db:db"
      - "kong:kong"
    image: pagekb/golang-gin
    volumes:
      - ./auth:/go/src/microservices-demo/auth:ro
    command: gin -t /go/src/microservices-demo/auth
    environment:
      - DB_USERNAME=restbucks
      - DB_PASSWORD=restbucks
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=restbucks
      - KONG_CLIENT_ID=auth_service
      - KONG_CLIENT_SECRET=auth_service_secret
      - KONG_PROVISION_KEY=6ca0c9d2e033476cb57b70b334b524ef
      - LOGXI=*
##################################################################
#              Kong-related services                             #
##################################################################
  kong-database:
    image: postgres:9.5
    ports:
      - 5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  kong-migration:
    image: kong:0.13.1
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
    command: kong migrations up
  kong:
    image: kong:0.13.1
    restart: on-failure
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migration:
        condition: service_started
    links:
      - kong-database:kong-database
      - rest-api-proxy
    ports:
      - 80:8000
      - 8443
      - 8001
    expose:
      - 7946
      - 7946/udp
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_LOG_LEVEL=debug
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://127.0.0.1:8000 || exit 1"]
      interval: 5s
      retries: 10
    command: kong start --vv
  kongfig:
    image: mashupmill/kongfig
    depends_on:
      kong:
        condition: service_healthy
    volumes:
    - './kong/config.yml:/config.yml'
    command: --path /config.yml --host kong:8001
  kongfig-dump:
    image: mashupmill/kongfig
    depends_on:
      kong:
        condition: service_healthy
    restart: on-failure
    command: --host kong:8001 dump
  kong-dashboard:
    depends_on:
      kong:
        condition: service_healthy
    restart: on-failure
    build: ./kong-dashboard
    ports:
      - 9999:8080
    command: start --kong-url http://kong:8001